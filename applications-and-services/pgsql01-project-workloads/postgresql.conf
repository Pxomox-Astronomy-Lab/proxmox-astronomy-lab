# ==============================================================================
# postgresql.conf for DESI Cosmic Void Project
# Optimized for: 8 Cores, 48GB RAM, NVMe Storage
# Workload: Heavy ETL writes, complex analytical reads, high concurrency
# ==============================================================================

# ------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
# ------------------------------------------------------------------------------

listen_addresses = '*'                  # Listen on all network interfaces
port = 5432                             # Default port
max_connections = 200                   # Increased for cluster workers + analysts

# ------------------------------------------------------------------------------
# RESOURCE USAGE (MEMORY)
# Key tuning parameters for performance
# ------------------------------------------------------------------------------

# Set the data directory to the new location on the NVMe drive
data_directory = '/mnt/data/pg01'

# shared_buffers: The most important memory setting. ~25% of system RAM.
# Allows more of the database to be cached in memory, speeding up reads.
shared_buffers = 12GB

# effective_cache_size: An estimate for the query planner. ~75% of system RAM.
# Helps the planner make better decisions about using indexes vs. sequential scans.
effective_cache_size = 36GB

# maintenance_work_mem: Memory for maintenance tasks like VACUUM, CREATE INDEX.
# Crucial for performance during the heavy data ingestion phase.
maintenance_work_mem = 2GB

# work_mem: Memory per sort/hash operation before spilling to disk.
# Benefits complex analytical queries with large joins and sorting.
# Be cautious as multiple operations can use this amount. 256MB is a strong start.
work_mem = 256MB

# ------------------------------------------------------------------------------
# WRITE AHEAD LOG (WAL)
# Tuned for write-heavy ETL workload to smooth I/O.
# ------------------------------------------------------------------------------

# wal_buffers: Memory for WAL data before it's written to disk.
# -1 lets Postgres choose a size based on shared_buffers, a good default in PG14+.
wal_buffers = -1

# min_wal_size / max_wal_size: Manages WAL disk space usage.
# Larger values reduce the frequency of checkpoints, smoothing I/O spikes.
min_wal_size = 2GB
max_wal_size = 8GB

# ------------------------------------------------------------------------------
# CHECKPOINTING
# Spreads the I/O load from checkpoints to reduce performance stalls.
# ------------------------------------------------------------------------------

checkpoint_timeout = 15min              # Start a checkpoint every 15 minutes
checkpoint_completion_target = 0.9      # Spread checkpoint writes over 90% of the interval

# ------------------------------------------------------------------------------
# WORKER PROCESSES
# Leverages the 8 available CPU cores for parallel query execution.
# ------------------------------------------------------------------------------

max_worker_processes = 8                # Max number of background processes (matches core count)
max_parallel_workers_per_gather = 4     # Max parallel workers for a single query node (half of cores)
max_parallel_maintenance_workers = 4    # For parallel index creation, etc.
max_parallel_workers = 8                # Total parallel workers system-wide

# ------------------------------------------------------------------------------
# QUERY PLANNER (COSTING)
# Adjusted for fast NVMe storage.
# ------------------------------------------------------------------------------

# random_page_cost: Cost of a non-sequential disk page fetch.
# Default (4.0) is for spinning disks. NVMe has almost no seek penalty.
random_page_cost = 1.1

# ------------------------------------------------------------------------------
# LOGGING
# Essential for monitoring and troubleshooting.
# ------------------------------------------------------------------------------

logging_collector = on
log_directory = 'log'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_min_duration_statement = 250ms      # Log queries that take longer than 250ms
log_checkpoints = on
log_lock_waits = on
log_temp_files = 0                      # Log temp file usage for query tuning
log_autovacuum_min_duration = 0         # Log all autovacuum activity

# Make sure to set timezone to your preference
timezone = 'America/New_York'

# All other settings can remain at their defaults for this workload.
